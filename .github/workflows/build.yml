name: Windows TensorFlow Java Native Build

on:
  workflow_dispatch:

jobs:
  build-windows:
    name: Build TensorFlow Java Native (Windows)
    runs-on: windows-2022

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: 'tensorflow/java'
          ref: 'v1.0.0'

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        shell: pwsh
        run: |
          Write-Host "===== Installing Python Dependencies ====="
          python --version
          python -m pip install --upgrade pip
          pip install numpy==1.23.5 wheel packaging requests
          pip install keras_preprocessing --no-deps

      - name: Install MSYS2 and Dependencies
        shell: pwsh
        run: |
          Write-Host "===== Installing MSYS2 ====="
          choco install -y msys2 --no-progress
          & C:\msys64\usr\bin\bash.exe -lc "pacman -Syu --noconfirm"
          & C:\msys64\usr\bin\bash.exe -lc "pacman -S --noconfirm git patch unzip rsync"

      - name: Install Bazel 6.1.0
        shell: pwsh
        run: |
          Write-Host "===== Installing Bazel 6.1.0 ====="
          choco install -y bazel --version=6.1.0 --no-progress
          bazel --version

      - name: Setup Build Directories
        shell: pwsh
        run: |
          Write-Host "===== Setting up Build Directories ====="
          New-Item -ItemType Directory -Force -Path C:\buildtmp
          New-Item -ItemType Directory -Force -Path C:\bazel_cache

      - name: Configure Bazel
        shell: pwsh
        run: |
          Write-Host "===== Creating Bazel Configuration ====="
          $bazelConfig = @'
          # Windows build configuration
          build --enable_platform_specific_config
          build:windows --cxxopt=/std:c++17
          build:windows --host_cxxopt=/std:c++17
          build:windows --copt=/D_USE_MATH_DEFINES
          build:windows --host_copt=/D_USE_MATH_DEFINES
          build:windows --copt=/DWIN32_LEAN_AND_MEAN
          build:windows --host_copt=/DWIN32_LEAN_AND_MEAN
          build:windows --copt=/wd4244
          build:windows --copt=/wd4267
          build:windows --copt=/wd4996
          build:windows --define=override_eigen_strong_inline=true
          
          # Resource limits
          build --jobs=2
          build --local_ram_resources=HOST_RAM*.5
          build --disk_cache=C:/bazel_cache
          
          # Reduce verbosity
          build --show_progress_rate_limit=30
          '@
          $bazelConfig | Out-File -FilePath .bazelrc.user -Encoding utf8

      - name: Set Environment Variables
        shell: pwsh
        run: |
          Write-Host "===== Setting Environment Variables ====="
          $pythonPath = (Get-Command python).Source
          "BAZEL_SH=C:\msys64\usr\bin\bash.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          "BAZEL_VS=C:\Program Files\Microsoft Visual Studio\2022\Enterprise" | Out-File -FilePath $env:GITHUB_ENV -Append
          "BAZEL_VC=C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC" | Out-File -FilePath $env:GITHUB_ENV -Append
          "PYTHON_BIN_PATH=$pythonPath" | Out-File -FilePath $env:GITHUB_ENV -Append
          "TMPDIR=C:\buildtmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          "TEMP=C:\buildtmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          "TMP=C:\buildtmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          "TEST_TMPDIR=C:\buildtmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Environment configured"
          Write-Host "JAVA_HOME: $env:JAVA_HOME"
          Write-Host "PYTHON: $pythonPath"

      - name: Verify Tools
        shell: pwsh
        run: |
          Write-Host "===== Verifying Build Tools ====="
          java -version
          python --version
          bazel --version
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64 '&' cl

      - name: Build TensorFlow Java Native
        shell: cmd
        run: |
          echo ===== Starting Maven Build =====
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
          echo Setting environment variables...
          set BAZEL_JAVA_HOME=%JAVA_HOME%
          set BAZEL_SH=%BAZEL_SH%
          set BAZEL_VS=%BAZEL_VS%
          set BAZEL_VC=%BAZEL_VC%
          set PYTHON_BIN_PATH=%PYTHON_BIN_PATH%
          set TMPDIR=%TMPDIR%
          set TEMP=%TEMP%
          set TMP=%TMP%
          set TEST_TMPDIR=%TEST_TMPDIR%
          echo Starting Maven build...
          call mvn clean package -Pnative-build -Pwindows -B -U -Djavacpp.cppbuild=true -Djavacpp.platform=windows-x86_64 -Djavacpp.platform.custom=windows-x86_64 -DskipTests=true -Dmaven.wagon.http.retryHandler.count=5 -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -Dhttp.keepAlive=false
          if errorlevel 1 (
            echo Build failed with error code %errorlevel%
            exit /b 1
          )
          echo Build completed successfully!

      - name: Verify Build Artifacts
        shell: pwsh
        run: |
          Write-Host "===== Verifying Build Artifacts ====="
          $paths = @(
            "tensorflow-core\tensorflow-core-api\target",
            "tensorflow-core\tensorflow-core-native\target",
            "tensorflow-core\tensorflow-core-native\target\native"
          )
          foreach ($path in $paths) {
            if (Test-Path $path) {
              Write-Host "`nContents of $path:"
              Get-ChildItem -Path $path -Recurse -File | Where-Object { $_.Extension -in @('.jar', '.dll', '.pdb') } | Format-Table Name, Length, LastWriteTime -AutoSize
            } else {
              Write-Host "Warning: Path not found: $path"
            }
          }

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensorflow-java-native-windows-${{ github.run_number }}
          path: |
            tensorflow-core/**/target/*.jar
            tensorflow-core/**/target/**/*.dll
            tensorflow-core/**/target/**/*.pdb
          if-no-files-found: warn
          retention-days: 7

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ github.run_number }}
          path: |
            **/*.log
            C:\buildtmp\**\*.log
          if-no-files-found: ignore
          retention-days: 3

      - name: Clean Up
        if: always()
        shell: pwsh
        run: |
          Write-Host "===== Cleaning up temporary files ====="
          Remove-Item -Path C:\buildtmp -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path C:\bazel_cache -Recurse -Force -ErrorAction SilentlyContinue
