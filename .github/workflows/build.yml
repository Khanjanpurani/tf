name: Windows TensorFlow Java Native Build

on:
  workflow_dispatch:  # manual trigger

jobs:
  build-windows:
    name: Build TensorFlow Java Native (Windows)
    runs-on: windows-2022

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: 'tensorflow/java'
          ref: 'v1.0.0'

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Force Java 17 for all tools
        shell: cmd
        run: |
          echo Forcing JAVA_HOME and PATH
          set JAVA_HOME=%JAVA_HOME%
          set PATH=%JAVA_HOME%\bin;%PATH%
          java -version
          mvn -version

      - name: Install Dependencies (Python 3.12 + Git)
        shell: cmd
        run: |
          echo Installing Python 3.12 and Git
          choco install -y python --version=3.12.0 git --no-progress
          python --version
          git --version
          python -m pip install numpy six wheel

      - name: Configure MSVC Compiler
        shell: cmd
        run: |
          echo Configuring MSVC environment
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
          cl

      - name: Prepare TMP Environment
        shell: cmd
        run: |
          echo ===== Preparing TMP Env =====
          mkdir C:\tmp
          set TMPDIR=C:\tmp
          set TEMP=C:\tmp
          set TMP=C:\tmp
          set TEST_TMPDIR=C:\tmp

      - name: Install Bazel 6.5.0
        shell: cmd
        run: |
          echo ===== Installing Bazel 6.5.0 =====
          mkdir C:\bazel
          curl -Lo C:\bazel\bazel.exe https://github.com/bazelbuild/bazel/releases/download/6.5.0/bazel-6.5.0-windows-x86_64.exe
          set PATH=C:\bazel;%PATH%
          echo Bazel version:
          bazel --version

      - name: Force Bazel to Use Java 17
        shell: cmd
        run: |
          echo ===== Forcing Bazel to Java 17 =====
          set BAZEL_JAVA_HOME=%JAVA_HOME%
          set JAVA_HOME=%JAVA_HOME%
          java -version

      - name: Check Bazel Environment
        shell: cmd
        run: |
          echo ===== Bazel Info =====
          set PATH=C:\bazel;%PATH%
          set BAZEL_JAVA_HOME=%JAVA_HOME%
          mkdir C:\tmp\dummy_ws
          cd C:\tmp\dummy_ws
          echo workspace(name = "dummy") > WORKSPACE
          bazel info java-home
          cd ..
          rmdir /s /q C:\tmp\dummy_ws

      - name: Download and Patch nsync
        shell: cmd
        run: |
          echo ===== Downloading and Patching nsync =====
          curl -Lo C:\nsync.tar.gz https://github.com/google/nsync/archive/refs/tags/1.24.0.tar.gz
          python -c "import tarfile; tarfile.open('C:/nsync.tar.gz').extractall(path='C:/tmp/')"
          set PATCHED_DIR=C:\tmp\nsync-1.24.0
          echo Patching %PATCHED_DIR%\public\nsync\platform\c++11\platform.h
          type NUL > %PATCHED_DIR%\temp.h
          echo #include ^<chrono^> >> %PATCHED_DIR%\temp.h
          type "%PATCHED_DIR%\public\nsync\platform\c++11\platform.h" >> %PATCHED_DIR%\temp.h
          move /Y "%PATCHED_DIR%\temp.h" "%PATCHED_DIR%\public\nsync\platform\c++11\platform.h"

      - name: Build TensorFlow Java Native (Windows)
        shell: cmd
        run: |
          echo ===== Starting Native Build =====
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
          set BAZEL_JAVA_HOME=%JAVA_HOME%
          set TMPDIR=C:\tmp
          set TEMP=C:\tmp
          set TMP=C:\tmp
          set TEST_TMPDIR=C:\tmp
          call mvn clean install ^
            -Pnative-build ^
            -Pwindows ^
            -B -U -e ^
            -Djavacpp.cppbuild=true ^
            -Djavacpp.platform=windows-x86_64 ^
            -Djavacpp.platform.custom=windows-x86_64 ^
            -Dbazel.executable=C:\bazel\bazel.exe ^
            -Dmaven.test.skip=true ^
            -DskipTests=true ^
            -Dbazel.build.flags=--override_repository=nsync=C:/tmp/nsync-1.24.0 ^
          if ERRORLEVEL 1 exit /b 1

      - name: Verify Build Artifacts
        shell: cmd
        run: |
          echo ===== Build Artifacts =====
          dir tensorflow-core\tensorflow-core-api\target
          dir tensorflow-core\tensorflow-core-native\target
          dir tensorflow-core\tensorflow-core-native\target\native

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensorflow-java-native-windows
          path: |
            tensorflow-core/**/*.jar
            tensorflow-core/**/*.dll
            tensorflow-core/**/*.pdb
